<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Faithful_Transitive_Permutation_Representations">
<Heading>Faithful Transitive Permutation Representations</Heading>

<P/>
 The action of a group G on the coset space of a subgroup gives us a transitive permutation representation of the group.
 Whenever the subgroup is core-free, we have that the action of G on the coset space of the subgroup will be faithful. 
 Moreover, the stabilizer of a point on a faithful transitive permutation representation of G will always be a core-free subgroup. 
<P/>
<Section Label="Chapter_Faithful_Transitive_Permutation_Representations_Section_Obtaining_Faithful_Transitive_Permutation_Representations">
<Heading>Obtaining Faithful Transitive Permutation Representations</Heading>

<P/>
<ManSection>
  <Oper Arg="G [, all_ftpr]" Name="FaithfulTransitivePermutationRepresentations" Label="for IsGroup"/>
 <Returns>a list
</Returns>
 <Description>
  For a finite group <A>G</A>, <A>FaithfulTransitivePermutationRepresentations</A> returns a list of a faithful transitive permutation representation of <A>G</A> for each degree.
  If <A>all_ftpr</A> is true, then it will return a list of all faithful transitive permutation representations.
<Example><![CDATA[
gap> LoadPackage("CoreFreeSub");;
gap> sp := SymplecticGroup(4,2);;
gap> CoreFreeDegrees(sp);
[ 720, 360, 240, 180, 144, 120, 90, 80, 72, 60, 45, 40, 36, 30, 20, 15, 12, 10, 6 ]
gap> ftprs := FaithfulTransitivePermutationRepresentations(sp);; Size(ftprs);
19
gap> all_ftprs := FaithfulTransitivePermutationRepresentations(sp,true);; Size(all_ftprs);
54
]]></Example>


 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Faithful_Transitive_Permutation_Representations_Section_Faithful_Transitive_Permutation_Representation_of_Minimal_Degree">
<Heading>Faithful Transitive Permutation Representation of Minimal Degree</Heading>

<P/>
 To complement the already existing functions in GAP <A>MinimalFaithfulPermutationRepresentation</A> and <A>MinimalFaithfulPermutationDegree</A>,
 the following functions to retreive the <A>MinimalFaithfulTransitivePermutationRepresentation</A> and <A>MinimalFaithfulTransitivePermutationDegree</A>.
<P/>
<ManSection>
  <Oper Arg="G [,all_minimal_ftpr]" Name="MinimalFaithfulTransitivePermutationRepresentation" Label="for IsGroup"/>
 <Returns>an isomorphism (or a list of isomorphisms)
</Returns>
 <Description>
 For a finite group <A>G</A>, <A>MinimalFaithfulTransitivePermutationRepresentation</A> returns an isomorphism of <A>G</A> into the symmetric group of minimal degree acting transitively on its domain. 
 If <A>all_minimal_ftpr</A> is set as <A>true</A>, then it returns a list of all isomorphisms <A>G</A> into the symmetric group of minimal degree.
<Example><![CDATA[
gap> LoadPackage("CoreFreeSub");;
gap> sp := SymplecticGroup(4,2);;
gap> min_ftpr := MinimalFaithfulTransitivePermutationRepresentation(sp);
CompositionMapping( <action epimorphism>, <action isomorphism> )
gap> min_ftpr(sp);
Group([ (1,3,2,4), (1,3)(2,5,6,4) ])
gap> min_ftprs := MinimalFaithfulTransitivePermutationRepresentation(sp,true);
[ CompositionMapping( <action epimorphism>, <action isomorphism> ), CompositionMapping( <action epimorphism>, <action isomorphism> ) ]
gap> min_ftprs[2](sp);
Group([ (1,3,4,2), (1,2,5,3)(4,6) ])
]]></Example>


 </Description>
</ManSection>


<ManSection>
  <Func Arg="G" Name="MinimalFaithfulTransitivePermutationDegree" />
 <Returns>an integer
</Returns>
 <Description>
 For a finite group <A>G</A>, <A>MinimalFaithfulTransitivePermutationDegree</A> returns the least positive integer n such that <A>G</A> is isomorphic to a subgroup of the symmetric group of degree n acting transitively on its domain.
<Example><![CDATA[
gap> LoadPackage("CoreFreeSub");;
gap> sp := SymplecticGroup(4,2);; g:=SimpleGroup("PSL",3,5);;
gap> MinimalFaithfulTransitivePermutationDegree(sp);
6
gap> MinimalFaithfulTransitivePermutationDegree(g);
31
]]></Example>


 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Faithful_Transitive_Permutation_Representations_Section_Drawing_the_Faithful_Transitive_Permutation_Representation_Graph">
<Heading>Drawing the Faithful Transitive Permutation Representation Graph</Heading>

<P/>
 One of the advantages of Faithful Transitive Permutation Representation Graph are on Groups generated by involutions, such as C-groups.
 These graphs are very useful in the research of abstract polytopes and hypertopes, mainly called as "Schreier coset graphs" or "CPR graphs" in this area. 
 Here we will give a function that builds this graph given a permutation group generated by involutions, a group and one of its core-free subgroups or by giving an isomorphism of the group into the symmetric group acting faithfully and transitively on its domain.
 To use Graphviz in order to create the image file, you need to be running GAP on a Linux Environment (Windows Subsystem for Linux is supported), with graphviz installed.
<P/>
<ManSection>
  <Oper Arg="H, K, filename [, layout, filetype]" Name="DrawFTPRGraph" Label="for IsPermGroup,IsString,IsString,IsString"/>
 <Returns>exports both a .dot file and an image file
</Returns>
 <Description>
 Given a transitive permutation group <A>G</A>, a faithful transitive permutation representation of a group <A>map</A> or a group <A>H</A> and one of its core-free subgroups <A>K</A>, the function will write a .dot file in the current path where GAP is running. 
 If Graphviz is installed, the function will also create an image file on the current path.
 If neither layout nor the filetype is specified, then the default layout is "neato" and the filetype is "svg".
 The layouts can be one of the following: ["dot", "neato", "twopi", "circo", "fdp", "sfdp", "patchwork", "osage"] while the
 filetypes can be one of the following: ["dot", "xdot", "ps", "pdf", "svg", "svgz", "png", "gif", "jpg", "jpeg", "json", "imap", "cmapx"].
<Example><![CDATA[

]]></Example>


 </Description>
</ManSection>


</Section>


</Chapter>

